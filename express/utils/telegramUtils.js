// const telegramBot = require("../telegramBot");
const Currency = require("../models/Currency");
const Cripto = require("../models/Cripto");

const getUserChatUrl = (user) => {
  if (user.username) {
    return `https://t.me/${user.username}`;
  } else if (user.phoneNumber) {
    return `https://t.me/+${user.phoneNumber}`;
  } else {
    return null;
  }
};

const sendApplicationMessage = async (
  telegramBot,
  application,
  sellerUser,
  buyerUser
) => {
  const currencyItem = await Currency.findOne({ code: application.currency });
  let forPaymentItem = await Cripto.findOne({ code: application.forPayment });
  if (!forPaymentItem) {
    forPaymentItem = await Currency.findOne({ code: application.forPayment });
  }
  const paymentMethodItem = forPaymentItem?.paymentMethodsList?.find(
    (item) => item.code === application.paymentMethod
  )?.label;

  const message =
    `–£ –≤–∞—Å –Ω–æ–≤–∞—è –∑–∞—è–≤–∫–∞!
    üè∑Ô∏è –¶–µ–Ω–∞: ${application.price}
    üí∞ –°—É–º–º–∞: ${application.quantity}
    üí± –í–∞–ª—é—Ç–∞: ${currencyItem.label}
    üí∏ –ö –æ–ø–ª–∞—Ç–µ: ${forPaymentItem.label}
    ` +
    (paymentMethodItem
      ? `üí≥ –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã: ${paymentMethodItem}
    `
      : "") +
    `üë§ –ü–æ–∫—É–ø–∞—Ç–µ–ª—å: ${
      buyerUser.ratings.average.toFixed(2) +
      "/" +
      buyerUser.ratings.count +
      " ‚≠ê"
    }`;

  const sentMessage = await telegramBot.sendMessage(
    sellerUser.telegramId,
    message,
    {
      reply_markup: {
        inline_keyboard: [
          [
            {
              text: "	‚úÖ –ü—Ä–∏–Ω—è—Ç—å –∑–∞—è–≤–∫—É",
              callback_data: `${application._id}`,
            },
          ],
        ],
      },
    }
  );

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º chatId –∏ messageId –≤ –∑–∞—è–≤–∫–µ
  application.messageId = {
    seller: sentMessage.message_id,
  };
  await application.save();
};

const editApplicationMessage = async (
  telegramBot,
  application,
  buyerUser,
  sellerUser
) => {
  const buyerChatUrl = getUserChatUrl(buyerUser);
  const sellerChatUrl = getUserChatUrl(sellerUser);

  const newKeyboard = {
    inline_keyboard: [
      [
        {
          text: "üí¨ –ü–µ—Ä–µ–π—Ç–∏ –∫ —á–∞—Ç—É —Å –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–º",
          url: buyerChatUrl,
        },
      ],
    ],
  };

  // –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ –ø—Ä–æ–¥–∞–≤—Ü–∞
  await telegramBot.editMessageReplyMarkup(newKeyboard, {
    chat_id: sellerUser.telegramId,
    message_id: application.messageId.seller,
  });

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–∫—É–ø–∞—Ç–µ–ª—é
  const buyerMessage = `–ó–∞—è–≤–∫–∞ –Ω–∞ —Å—É–º–º—É ${application.quantity} ${application.currency} –ø—Ä–∏–Ω—è—Ç–∞, –¥–æ—Å—Ç—É–ø–µ–Ω —á–∞—Ç —Å –ø—Ä–æ–¥–∞–≤—Ü–æ–º!`;
  const sentMessage = await telegramBot.sendMessage(
    buyerUser.telegramId,
    buyerMessage,
    {
      reply_markup: {
        inline_keyboard: [
          [
            {
              text: "üí¨ –ü–µ—Ä–µ–π—Ç–∏ –∫ —á–∞—Ç—É —Å –ø—Ä–æ–¥–∞–≤—Ü–æ–º",
              url: sellerChatUrl,
            },
          ],
        ],
      },
    }
  );
  application.messageId = {
    buyer: sentMessage.message_id,
    seller: application.messageId.seller,
  };
  await application.save();
};

const deliteApplicationMessage = async (
  telegramBot,
  application,
  buyerUser,
  sellerUser
) => {
  try {
    const newKeyboard = {
      inline_keyboard: [
        [
          {
            text: "–ó–∞—è–≤–∫–∞ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞",
            callback_data: "!",
          },
        ],
      ],
    };

    // –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ –ø—Ä–æ–¥–∞–≤—Ü–∞
    if (application.messageId.seller) {
      await telegramBot.editMessageReplyMarkup(newKeyboard, {
        chat_id: sellerUser.telegramId,
        message_id: application.messageId.seller,
      });
    }

    await telegramBot.editMessageReplyMarkup(newKeyboard, {
      chat_id: buyerUser.telegramId,
      message_id: application.messageId.buyer,
    });
  } catch (error) {
    console.log(error);
  }
};

const phoneNumberInstructions = async (bot, chatId) => {
  await bot.sendMessage(
    chatId,
    "–ß—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É '–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º' –Ω–∏–∂–µ.",
    {
      reply_markup: {
        keyboard: [[{ text: "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º", request_contact: true }]],
        resize_keyboard: true,
        one_time_keyboard: true,
      },
    }
  );
};

module.exports = {
  sendApplicationMessage,
  editApplicationMessage,
  deliteApplicationMessage,
  getUserChatUrl,
  phoneNumberInstructions,
};
